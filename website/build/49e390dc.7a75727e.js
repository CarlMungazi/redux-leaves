(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{153:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(10),o=(n(0),n(185)),c={id:"intermediate-example",title:"Intermediate example",hide_title:!0,sidebar_label:"Intermediate example"},i={id:"examples/intermediate-example",title:"Intermediate example",description:"# Intermediate example: custom logic",source:"@site/../docs/examples/intermediateExample.md",permalink:"/docs/examples/intermediate-example",sidebar_label:"Intermediate example",sidebar:"docs",previous:{title:"Basic example",permalink:"/docs/examples/basic-example"},next:{title:"Advanced example",permalink:"/docs/examples/advanced-example"}},l=[{value:"Demonstration",id:"demonstration",children:[{value:"Set up with your custom reducer logic",id:"set-up-with-your-custom-reducer-logic",children:[]},{value:"Dispatch actions at any leaf with the corresponding keys",id:"dispatch-actions-at-any-leaf-with-the-corresponding-keys",children:[]}]},{value:"Default handling of arguments",id:"default-handling-of-arguments",children:[]}],s={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"intermediate-example-custom-logic"},"Intermediate example: custom logic"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://runkit.com/richardcrng/redux-leaves-custom-logic"}),"Play around with this code on Runkit")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Situation"),": I want to define a general type of reducer logic that can be reused on any arbitrary slice of state."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Complication"),": I want to do this as quickly, painlessly and intuitively as possible."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Question"),": Do I really have to create sub-reducers with the same underlying logic?"),Object(o.b)("p",null,"Answer: no! Just provide Redux-Leaves once with your custom reducer logic, and you can automatically use it at any leaf of your state tree."),Object(o.b)("h2",{id:"demonstration"},"Demonstration"),Object(o.b)("h3",{id:"set-up-with-your-custom-reducer-logic"},"Set up with your custom reducer logic"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { createStore } from 'redux'\nimport reduxLeaves from 'redux-leaves'\n\nconst initialState = {\n  counter: 2,\n  list: ['first', 'second'],\n  nested: { arbitrarily: { deep: 0 } }\n}\n\n// Key your reducer logic by a descriptive verb\nconst reducersDict = {\n  double: leafState => leafState * 2,\n  appendToEach: (leafState, action) => leafState.map(str => str.concat(action.payload)),\n  countTreeKeys: (leafState, action, treeState) => Object.keys(treeState).length\n}\n\n// Provide the dictionary of your reducer logic to reduxLeaves\nconst [reducer, actions] = reduxLeaves(initialState, reducersDict)\nconst store = createStore(reducer)\n")),Object(o.b)("h3",{id:"dispatch-actions-at-any-leaf-with-the-corresponding-keys"},"Dispatch actions at any leaf with the corresponding keys"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"store.dispatch(actions.counter.create.double())\nconsole.log(store.getState().counter) // 4\n\nstore.dispatch(actions.list.create.appendToEach(' item')) // ' item' will be the action payload\nconsole.log(store.getState().list) // ['first item', 'second item']\n\nstore.dispatch(actions.nested.arbitrarily.deep.create.countTreeKeys())\nconsole.log(store.getState().nested.arbitrarily.deep) // 3\n\n// And to demonstrate reusing logic at an arbitrary leaf:\nstore.dispatch(actions.nested.arbitrarily.deep.create.double())\nconsole.log(store.getState().nested.arbitrarily.deep) // 6\n")),Object(o.b)("h2",{id:"default-handling-of-arguments"},"Default handling of arguments"),Object(o.b)("p",null,"When you supply ",Object(o.b)("inlineCode",{parentName:"p"},"reduxLeaves")," with custom reducer logic, it provides the corresponding action creators, e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"actions.list.create.appendToEach")," used above."),Object(o.b)("p",null,"The ",Object(o.b)("em",{parentName:"p"},"default behaviour")," of these action creators is that, if they receive any arguments, ",Object(o.b)("em",{parentName:"p"},"only the first argument")," is passed to the created action as a payload:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const actionToAppend = actions.list.create.appendToEach('foo', 'bar')\nconsole.log(actionToAppend.payload) // 'foo'\n")),Object(o.b)("p",null,"If you would like to customise this behaviour, look at the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/examples/advanced-example"}),"advanced example"),"."))}p.isMDXComponent=!0},185:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,b=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?r.a.createElement(b,i({ref:t},s,{components:n})):r.a.createElement(b,i({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);