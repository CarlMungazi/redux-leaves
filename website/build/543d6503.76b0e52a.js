(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(1),a=n(10),c=(n(0),n(185)),o={id:"bundle",title:"bundle",hide_title:!0,sidebar_label:"bundle"},i={id:"api/bundle",title:"bundle",description:"# `bundle(actions[, type])`",source:"@site/../docs/api/bundle.md",permalink:"/docs/api/bundle",sidebar_label:"bundle",sidebar:"docs",previous:{title:"reduxLeaves",permalink:"/docs/redux-leaves"},next:{title:"Leaf Reducers",permalink:"/docs/api/leaf-reducers"}},s=[{value:"Parameters",id:"parameters",children:[]},{value:"Returns",id:"returns",children:[]},{value:"Examples",id:"examples",children:[{value:"Actions array, no type provided",id:"actions-array-no-type-provided",children:[]},{value:"Actions array, type provided",id:"actions-array-type-provided",children:[]},{value:"Order matters",id:"order-matters",children:[]},{value:"Compound bundling",id:"compound-bundling",children:[]}]}],l={rightToc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"bundleactions-type"},Object(c.b)("inlineCode",{parentName:"h1"},"bundle(actions[, type])")),Object(c.b)("p",null,"Returns an (action) object that the ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/redux-leaves"}),"reduxLeaves")," reducer uses to process the individual actions in the ",Object(c.b)("inlineCode",{parentName:"p"},"actions")," array sequentially (but, through the store, one dispatch)."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"See the ",Object(c.b)("a",Object(r.a)({parentName:"strong"},{href:"/docs/examples/basic-example"}),"30 second demo"))," for usage."),Object(c.b)("h2",{id:"parameters"},"Parameters"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"actions")," ",Object(c.b)("em",{parentName:"li"},"(object[])"),": an array where each element should be an action created through the Redux-Leaves ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/create"}),Object(c.b)("inlineCode",{parentName:"a"},"create"))," API"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"type")," ",Object(c.b)("em",{parentName:"li"},"(string, optional)"),": a string that will be the type of the returned action")),Object(c.b)("h2",{id:"returns"},"Returns"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"action")," ",Object(c.b)("em",{parentName:"p"},"(object)"),": a single object to dispatch to the ",Object(c.b)("inlineCode",{parentName:"p"},"store")),Object(c.b)("h2",{id:"examples"},"Examples"),Object(c.b)("h3",{id:"actions-array-no-type-provided"},"Actions array, no type provided"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { createStore } from 'redux'\nimport reduxLeaves, { bundle } from 'reduxLeaves'\n\nconst initialState = {\n  counter: 0,\n  list: ['a']\n}\n\nconst [reducer, actions] = reduxLeaves(initialState)\nconst store = createStore(reducer)\n\nconst incrementAndPush = bundle([\n  actions.counter.create.increment(),\n  actions.list.create.push('b')\n])\n\n// Action has a default type based on bundled action types:\nconsole.log(incrementAndPush.type) // 'counter/INCREMENT; list/PUSH'\n\nstore.dispatch(incrementAndPush)\nconsole.log(store.getState()) // { counter: 1, list: ['a', 'b'] }\n")),Object(c.b)("h3",{id:"actions-array-type-provided"},"Actions array, type provided"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { createStore } from 'redux'\nimport reduxLeaves, { bundle } from 'reduxLeaves'\n\nconst initialState = {\n  counter: 0,\n  list: ['a']\n}\n\nconst [reducer, actions] = reduxLeaves(initialState)\nconst store = createStore(reducer)\n\nconst incrementAndPush = bundle([\n  actions.counter.create.increment(),\n  actions.list.create.push('b'),\n  'INCREMENT_AND_PUSH'\n])\n\n// Action has the provided type\nconsole.log(incrementAndPush.type) // 'INCREMENT_AND_PUSH'\n\n// But you can still see the action types bundled if you wish\nconsole.log(incrementAndPush.leaf.bundled) // ['counter/INCREMENT', 'list/PUSH']\n\nstore.dispatch(incrementAndPush)\nconsole.log(store.getState()) // { counter: 1, list: ['a', 'b'] }\n")),Object(c.b)("h3",{id:"order-matters"},"Order matters"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { createStore } from 'redux'\nimport reduxLeaves, { bundle } from 'reduxLeaves'\n\nconst initialState = {\n  counter: 0,\n  list: ['a']\n}\n\nconst [reducer, actions] = reduxLeaves(initialState)\nconst store = createStore(reducer)\n\nconst incrementThenPush = bundle([\n  actions.counter.create.increment(),\n  actions.list.create.do((leafState, treeState) => [...leafState, treeState.counter])\n])\n\nconst pushThenIncrement = bundle([\n  actions.list.create.do((leafState, treeState) => [...leafState, treeState.counter]),    actions.counter.create.increment()\n])\n\nstore.dispatch(incrementThenPush)\nconsole.log(store.getState()) // { counter: 1, list: ['a', 1] }\n\nstore.dispatch(pushThenIncrement)\nconsole.log(store.getState()) // { counter: 2, list: ['a', 1, 1] }\n")),Object(c.b)("h3",{id:"compound-bundling"},"Compound bundling"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { createStore } from 'redux'\nimport reduxLeaves, { bundle } from 'reduxLeaves'\n\nconst initialState = {\n  counter: 0,\n  list: ['a']\n}\n\nconst [reducer, actions] = reduxLeaves(initialState)\nconst store = createStore(reducer)\n\nconst incrementAndPush = bundle([\n  actions.counter.create.increment(),\n  actions.list.create.push('b')\n])\n\nconst incrementAndPushAndIncrement = bundle([\n  incrementAndPush,\n  actions.counter.create.increment()\n])\n\nstore.dispatch(incrementAndPushAndIncrement)\nconsole.log(store.getState()) // { counter: 2, list: ['a', 'b'] }\n")))}u.isMDXComponent=!0},185:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},d=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||c;return n?a.a.createElement(m,i({ref:t},l,{components:n})):a.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);